## User ───

show me again

## Copilot ───

```lua
  1: require 'core.options'  -- Load general options
  2: require 'core.keymaps'  -- Load general keymaps
  3: require 'core.snippets' -- Custom code snippets
  4: 
  5: -- Install package manager
  6: local lazypath = vim.fn.stdpath 'data' .. '/lazy/lazy.nvim'
  7: if not vim.loop.fs_stat(lazypath) then
  8:   vim.fn.system {
  9:     'git',
 10:     'clone',
 11:     '--filter=blob:none',
 12:     'https://github.com/folke/lazy.nvim.git',
 13:     '--branch=stable', -- latest stable release
 14:     lazypath,
 15:   }
 16: end
 17: vim.opt.rtp:prepend(lazypath)
 18: 
 19: -- Import color theme based on environment variable NVIM_THEME
 20: local default_color_scheme = 'gruvbox'
 21: local env_var_nvim_theme = os.getenv 'NVIM_THEME' or default_color_scheme
 22: 
 23: -- Define a table of theme modules
 24: local themes = {
 25:   nord = 'plugins.themes.nord',
 26:   onedark = 'plugins.themes.onedark',
 27:   gruvbox = 'plugins.themes.gruvbox',
 28:   catppuccin = 'plugins.themes.catppuccin',
 29:   kanagawa = 'plugins.themes.kanagawa',
 30:   miasma = 'plugins.themes.miasma',
 31:   tokyodark = 'plugins.themes.tokyodark',
 32:   eldritch = 'plugins.themes.eldritch',
 33:   cyberpunk = 'plugins.themes.cyberpunk',
 34:   fluoromachine = 'plugins.themes.fluoromachine',
 35:   makurai = 'plugins.themes.makurai',
 36: }
 37: 
 38: -- Setup plugins
 39: require('lazy').setup({
 40:    require(themes[env_var_nvim_theme]),
 41:   -- Load all themes
 42:   -- (function()
 43:   --  local theme_plugins = {}
 44:   --  for _, theme in pairs(themes) do
 45:   --    table.insert(theme_plugins, require(theme))
 46:   --  end
 47:   --  return theme_plugins
 48:   -- end)(),
 49:   require 'plugins.telescope',
 50:   require 'plugins.treesitter',
 51:   require 'plugins.lsp',
 52:   require 'plugins.autocompletion',
 53:   -- require 'plugins.none-ls',
 54:   require 'plugins.copilot',
 55:   require 'plugins.lualine',
 56:   require 'plugins.indent-blankline',
 57:   require 'plugins.bufferline',
 58:   require 'plugins.neo-tree',
 59:   require 'plugins.alpha',
 60:   require 'plugins.project',
 61:   require 'plugins.lazygit',
 62:   require 'plugins.comment',
 63:   require 'plugins.debug',
 64:   -- require 'plugins.gitsigns',
 65:   require 'plugins.database',
 66:   require 'plugins.misc',
 67:   require 'plugins.harpoon',
 68:   require 'plugins.venv-selector',
 69:   require 'plugins.leetcode',
 70:   require 'plugins.noise',
 71:   require 'plugins.copilot-chat',
 72:   require 'plugins.themery',
 73: }, {
 74:   ui = {
 75:     -- If you have a Nerd Font, set icons to an empty table which will use the
 76:     -- default lazy.nvim defined Nerd Font icons otherwise define a unicode icons table
 77:     icons = vim.g.have_nerd_font and {} or {
 78:       cmd = '⌘',
 79:       config = '🛠',
 80:       event = '📅',
 81:       ft = '📂',
 82:       init = '⚙',
 83:       keys = '🗝',
 84:       plugin = '🔌',
 85:       runtime = '💻',
 86:       require = '🌙',
 87:       source = '📄',
 88:       start = '🚀',
 89:       task = '📌',
 90:       lazy = '💤 ',
 91:     },
 92:   },
 93: })
 94: 
 95: -- Function to check if a file exists
 96: local function file_exists(file)
 97:   local f = io.open(file, 'r')
 98:   if f then
 99:     f:close()
100:     return true
101:   else
102:     return false
103:   end
104: end
105: 
106: -- Path to the session file
107: local session_file = '.session.vim'
108: 
109: -- Check if the session file exists in the current directory
110: if file_exists(session_file) then
111:   -- Source the session file
112:   vim.cmd('source ' .. session_file)
113: end
114: 
115: -- The line beneath this is called `modeline`. See `:help modeline`
116: -- vim: ts=2 sts=2 sw=2 et
```

## User ───

Can you make it so that my nvim loads all the themes?

## Copilot ───

Sure, you can uncomment the section that loads all themes. Here's the modified `init.lua`:

```lua
  1: require 'core.options'  -- Load general options
  2: require 'core.keymaps'  -- Load general keymaps
  3: require 'core.snippets' -- Custom code snippets
  4: 
  5: -- Install package manager
  6: local lazypath = vim.fn.stdpath 'data' .. '/lazy/lazy.nvim'
  7: if not vim.loop.fs_stat(lazypath) then
  8:   vim.fn.system {
  9:     'git',
 10:     'clone',
 11:     '--filter=blob:none',
 12:     'https://github.com/folke/lazy.nvim.git',
 13:     '--branch=stable', -- latest stable release
 14:     lazypath,
 15:   }
 16: end
 17: vim.opt.rtp:prepend(lazypath)
 18: 
 19: -- Import color theme based on environment variable NVIM_THEME
 20: local default_color_scheme = 'gruvbox'
 21: local env_var_nvim_theme = os.getenv 'NVIM_THEME' or default_color_scheme
 22: 
 23: -- Define a table of theme modules
 24: local themes = {
 25:   nord = 'plugins.themes.nord',
 26:   onedark = 'plugins.themes.onedark',
 27:   gruvbox = 'plugins.themes.gruvbox',
 28:   catppuccin = 'plugins.themes.catppuccin',
 29:   kanagawa = 'plugins.themes.kanagawa',
 30:   miasma = 'plugins.themes.miasma',
 31:   tokyodark = 'plugins.themes.tokyodark',
 32:   eldritch = 'plugins.themes.eldritch',
 33:   cyberpunk = 'plugins.themes.cyberpunk',
 34:   fluoromachine = 'plugins.themes.fluoromachine',
 35:   makurai = 'plugins.themes.makurai',
 36: }
 37: 
 38: -- Setup plugins
 39: require('lazy').setup({
 40:   -- require(themes[env_var_nvim_theme]),
 41:   -- Load all themes
 42:   (function()
 43:     local theme_plugins = {}
 44:     for _, theme in pairs(themes) do
 45:       table.insert(theme_plugins, require(theme))
 46:     end
 47:     return theme_plugins
 48:   end)(),
 49:   require 'plugins.telescope',
 50:   require 'plugins.treesitter',
 51:   require 'plugins.lsp',
 52:   require 'plugins.autocompletion',
 53:   -- require 'plugins.none-ls',
 54:   require 'plugins.copilot',
 55:   require 'plugins.lualine',
 56:   require 'plugins.indent-blankline',
 57:   require 'plugins.bufferline',
 58:   require 'plugins.neo-tree',
 59:   require 'plugins.alpha',
 60:   require 'plugins.project',
 61:   require 'plugins.lazygit',
 62:   require 'plugins.comment',
 63:   require 'plugins.debug',
 64:   -- require 'plugins.gitsigns',
 65:   require 'plugins.database',
 66:   require 'plugins.misc',
 67:   require 'plugins.harpoon',
 68:   require 'plugins.venv-selector',
 69:   require 'plugins.leetcode',
 70:   require 'plugins.noise',
 71:   require 'plugins.copilot-chat',
 72:   require 'plugins.themery',
 73: }, {
 74:   ui = {
 75:     -- If you have a Nerd Font, set icons to an empty table which will use the
 76:     -- default lazy.nvim defined Nerd Font icons otherwise define a unicode icons table
 77:     icons = vim.g.have_nerd_font and {} or {
 78:       cmd = '⌘',
 79:       config = '🛠',
 80:       event = '📅',
 81:       ft = '📂',
 82:       init = '⚙',
 83:       keys = '🗝',
 84:       plugin = '🔌',
 85:       runtime = '💻',
 86:       require = '🌙',
 87:       source = '📄',
 88:       start = '🚀',
 89:       task = '📌',
 90:       lazy = '💤 ',
 91:     },
 92:   },
 93: })
 94: 
 95: -- Function to check if a file exists
 96: local function file_exists(file)
 97:   local f = io.open(file, 'r')
 98:   if f then
 99:     f:close()
100:     return true
101:   else
102:     return false
103:   end
104: end
105: 
106: -- Path to the session file
107: local session_file = '.session.vim'
108: 
109: -- Check if the session file exists in the current directory
110: if file_exists(session_file) then
111:   -- Source the session file
112:   vim.cmd('source ' .. session_file)
113: end
114: 
115: -- The line beneath this is called `modeline`. See `:help modeline`
116: -- vim: ts=2 sts=2 sw=2 et
```

## User ───


